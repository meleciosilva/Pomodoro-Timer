{"ast":null,"code":"var _jsxFileName = \"/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionScreen.js\";\nimport React from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport Paused from \"./Paused\";\nimport FocusOrBreak from \"./FocusOrBreak\"; // displays focusing/on break statement, time remaining, and progress bar when in session\n\nfunction SessionScreen(props) {\n  const {\n    inSession,\n    focusTime,\n    breakTime,\n    isFocused,\n    progress,\n    isTimerRunning,\n    playTime\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FocusOrBreak, {\n    focusTime: focusTime,\n    breakTime: breakTime,\n    isFocused: isFocused,\n    playTime: playTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paused, {\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SessionScreen;","map":{"version":3,"sources":["/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionScreen.js"],"names":["React","ProgressBar","Paused","FocusOrBreak","SessionScreen","props","inSession","focusTime","breakTime","isFocused","progress","isTimerRunning","playTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA,SAAlC;AAA6CC,IAAAA,QAA7C;AAAuDC,IAAAA,cAAvD;AAAuEC,IAAAA;AAAvE,MAAmFP,KAAzF;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEE,SAAzB;AAAoC,IAAA,SAAS,EAAEC,SAA/C;AAA0D,IAAA,SAAS,EAAEC,SAArE;AAAgF,IAAA,QAAQ,EAAEG,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAED,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAED,QAAvB;AAAiC,IAAA,SAAS,EAAEH,SAA5C;AAAuD,IAAA,SAAS,EAAEC,SAAlE;AAA6E,IAAA,SAAS,EAAEC,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeL,aAAf","sourcesContent":["import React from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport Paused from \"./Paused\";\nimport FocusOrBreak from \"./FocusOrBreak\"; \n\n// displays focusing/on break statement, time remaining, and progress bar when in session\nfunction SessionScreen(props) {\n  const {inSession, focusTime, breakTime, isFocused, progress, isTimerRunning, playTime} = props;\n  \n  return (\n    <div>\n      \n      <FocusOrBreak focusTime={focusTime} breakTime={breakTime} isFocused={isFocused} playTime={playTime} />\n      <Paused isTimerRunning={isTimerRunning} />\n      <ProgressBar progress={progress} focusTime={focusTime} breakTime={breakTime} isFocused={isFocused} />\n    </div>\n  )\n}\n\nexport default SessionScreen;"]},"metadata":{},"sourceType":"module"}