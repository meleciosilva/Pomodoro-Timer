{"ast":null,"code":"var _jsxFileName = \"/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\n\nfunction Pomodoro() {\n  // Starts with session awaiting start\n  const [session, setSession] = useState(false); // Timer starts out paused\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // Focus time starts at 25 minutes\n\n  const [focusTime, setFocusTime] = useState(25); // adds 5 minutes of focus time per click up to 60 minutes\n\n  function addFocus() {\n    setFocusTime(prevTime => prevTime < 60 ? prevTime + 5 : prevTime);\n    setPlayTime(focusTime * 60);\n  } // reduces 5 minutes of focus time down to 5 minutes\n\n\n  function reduceFocus() {\n    setFocusTime(prevTime => prevTime > 5 ? prevTime - 5 : prevTime);\n    setPlayTime(focusTime * 60);\n  } // Break time starts at 5 minutes\n\n\n  const [breakTime, setBreakTime] = useState(5); // adds 1 minute to break time up to 15 minutes\n\n  function addBreak() {\n    setBreakTime(prevTime => {\n      return prevTime < 15 ? prevTime + 1 : prevTime;\n    });\n  } // reduces 1 minute of break time down to 1 minute\n\n\n  function reduceBreak() {\n    setBreakTime(prevTime => {\n      return prevTime > 1 ? prevTime - 1 : prevTime;\n    });\n  } // Pomodoro play time starts at selected focus time - converted to seconds\n\n\n  const [playTime, setPlayTime] = useState(focusTime * 60); // Starts Pomodoro timer on focus mode\n\n  const [isFocused, setIsFocused] = useState(true); // Decrements pomodoro time by 1 second when the timer is running\n\n  function decrementTime() {\n    if (playTime >= 1) setPlayTime(prevState => prevState - 1);\n  } // switches between focus and break mode when time runs out and plays bell\n\n\n  function switchModes() {\n    if (playTime === 0) {\n      setPlayTime(isFocused ? breakTime * 60 : focusTime * 60);\n      setIsFocused(current => !current);\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    }\n  } // Invokes decrementTime and switchModes functions every 1000ms (1 sec) when the timer is running\n\n\n  useInterval(() => {\n    decrementTime();\n    switchModes();\n  }, isTimerRunning ? 1000 : null); // sets timer on or off when play/pause button is pressed and starts session (displays countdown)\n\n  function playPause() {\n    setSession(true);\n    setIsTimerRunning(prevState => !prevState);\n  } // stops the session and timer and resets playTime to last selected focusTime\n\n\n  function stopSession() {\n    setSession(false);\n    setIsTimerRunning(false);\n    setPlayTime(focusTime * 60);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: reduceFocus,\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: addFocus,\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: reduceBreak,\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: addBreak,\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopSession,\n    disabled: !session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: session ? 'block' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, isFocused ? \"Focusing\" : \"On Break\", \" for \", minutesToDuration(isFocused ? focusTime : breakTime)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, secondsToDuration(playTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": isFocused ? focusTime : breakTime,\n    \"aria-valuenow\": playTime // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: playTime\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Pomodoro","session","setSession","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","addFocus","prevTime","setPlayTime","reduceFocus","breakTime","setBreakTime","addBreak","reduceBreak","playTime","isFocused","setIsFocused","decrementTime","prevState","switchModes","current","Audio","play","playPause","stopSession","oi","display","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC,CAFkB,CAIlB;;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD,CALkB,CAOlB;;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CARkB,CAUlB;;AACA,WAASY,QAAT,GAAoB;AAClBD,IAAAA,YAAY,CAACE,QAAQ,IAAIA,QAAQ,GAAG,EAAX,GAAgBA,QAAQ,GAAG,CAA3B,GAA+BA,QAA5C,CAAZ;AACAC,IAAAA,WAAW,CAACJ,SAAS,GAAG,EAAb,CAAX;AACD,GAdiB,CAgBlB;;;AACA,WAASK,WAAT,GAAuB;AACrBJ,IAAAA,YAAY,CAACE,QAAQ,IAAIA,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAG,CAA1B,GAA8BA,QAA3C,CAAZ;AACAC,IAAAA,WAAW,CAACJ,SAAS,GAAG,EAAb,CAAX;AACD,GApBiB,CAsBlB;;;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,CAAD,CAA1C,CAvBkB,CAyBlB;;AACA,WAASkB,QAAT,GAAoB;AAClBD,IAAAA,YAAY,CAACJ,QAAQ,IAAI;AACvB,aAAOA,QAAQ,GAAG,EAAX,GAAgBA,QAAQ,GAAG,CAA3B,GAA+BA,QAAtC;AACD,KAFW,CAAZ;AAGD,GA9BiB,CAgClB;;;AACA,WAASM,WAAT,GAAuB;AACrBF,IAAAA,YAAY,CAACJ,QAAQ,IAAI;AACvB,aAAOA,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAG,CAA1B,GAA8BA,QAArC;AACD,KAFW,CAAZ;AAGD,GArCiB,CAuClB;;;AACA,QAAM,CAACO,QAAD,EAAWN,WAAX,IAA0Bd,QAAQ,CAACU,SAAS,GAAG,EAAb,CAAxC,CAxCkB,CA0ClB;;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,IAAD,CAA1C,CA3CkB,CA6ClB;;AACA,WAASuB,aAAT,GAAyB;AACvB,QAAIH,QAAQ,IAAI,CAAhB,EAAmBN,WAAW,CAACU,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAX;AACpB,GAhDiB,CAkDlB;;;AACA,WAASC,WAAT,GAAuB;AACrB,QAAIL,QAAQ,KAAK,CAAjB,EAAoB;AAClBN,MAAAA,WAAW,CAACO,SAAS,GAAGL,SAAS,GAAG,EAAf,GAAoBN,SAAS,GAAG,EAA1C,CAAX;AACAY,MAAAA,YAAY,CAAEI,OAAD,IAAa,CAACA,OAAf,CAAZ;AACA,UAAIC,KAAJ,CAAW,8CAAX,EAA0DC,IAA1D;AACD;AACF,GAzDiB,CA2DlB;;;AACA1B,EAAAA,WAAW,CACT,MAAM;AACJqB,IAAAA,aAAa;AACbE,IAAAA,WAAW;AACZ,GAJQ,EAKTjB,cAAc,GAAG,IAAH,GAAU,IALf,CAAX,CA5DkB,CAoElB;;AACA,WAASqB,SAAT,GAAqB;AACnBtB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,iBAAiB,CAAEe,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD,GAxEiB,CA0ElB;;;AACA,WAASM,WAAT,GAAuB;AACrBvB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAK,IAAAA,WAAW,CAACJ,SAAS,GAAG,EAAb,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBP,iBAAiB,CAACO,SAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEK,WAJX;AAKE,IAAA,QAAQ,EAAET,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEM,QAJX;AAKE,IAAA,QAAQ,EAAEN,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,eA+BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBH,iBAAiB,CAACa,SAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEG,WAJX;AAKE,IAAA,QAAQ,EAAEb,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEY,QAJX;AAKE,IAAA,QAAQ,EAAEZ,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,CA/BF,CADF,eAiEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEuB,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAE5B,UAAU,CAAC;AACpB8B,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACvB,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAqBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,OAAO,EAAEsB,WAJX;AAKE,IAAA,QAAQ,EAAE,CAACxB,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CArBF,CADF,CADF,CAjEF,eAoGE;AAAK,IAAA,KAAK,EAAE;AAAE0B,MAAAA,OAAO,EAAE1B,OAAO,GAAG,OAAH,GAAa;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCe,SAAS,GAAG,UAAH,GAAgB,UAA1D,WAA2ElB,iBAAiB,CAACkB,SAAS,GAAGX,SAAH,GAAeM,SAAzB,CAA5F,CAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,iBAAiB,CAACgB,QAAD,CADpB,eAJF,CADF,CAFF,eAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAeZ,SAAS,GAAGX,SAAH,GAAeM,SAJzC;AAKE,qBAAeI,QALjB,CAK2B;AAL3B;AAME,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAEd;AAAT,KANT,CAM8B;AAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAZF,CApGF,CADF;AAkID;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration, secondsToDuration} from '../utils/duration';\n\nfunction Pomodoro() {\n  // Starts with session awaiting start\n  const [session, setSession] = useState(false);\n  \n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  // Focus time starts at 25 minutes\n  const [focusTime, setFocusTime] = useState(25);\n\n  // adds 5 minutes of focus time per click up to 60 minutes\n  function addFocus() {\n    setFocusTime(prevTime => prevTime < 60 ? prevTime + 5 : prevTime);\n    setPlayTime(focusTime * 60);\n  }\n  \n  // reduces 5 minutes of focus time down to 5 minutes\n  function reduceFocus() {\n    setFocusTime(prevTime => prevTime > 5 ? prevTime - 5 : prevTime);\n    setPlayTime(focusTime * 60);\n  }\n\n  // Break time starts at 5 minutes\n  const [breakTime, setBreakTime] = useState(5);\n  \n  // adds 1 minute to break time up to 15 minutes\n  function addBreak() {\n    setBreakTime(prevTime => {\n      return prevTime < 15 ? prevTime + 1 : prevTime\n    })\n  }\n  \n  // reduces 1 minute of break time down to 1 minute\n  function reduceBreak() {\n    setBreakTime(prevTime => {\n      return prevTime > 1 ? prevTime - 1 : prevTime;\n    })\n  }\n\n  // Pomodoro play time starts at selected focus time - converted to seconds\n  const [playTime, setPlayTime] = useState(focusTime * 60);\n\n  // Starts Pomodoro timer on focus mode\n  const [isFocused, setIsFocused] = useState(true);\n\n  // Decrements pomodoro time by 1 second when the timer is running\n  function decrementTime() {\n    if (playTime >= 1) setPlayTime(prevState => prevState - 1);\n  } \n\n  // switches between focus and break mode when time runs out and plays bell\n  function switchModes() {\n    if (playTime === 0) {\n      setPlayTime(isFocused ? breakTime * 60 : focusTime * 60);\n      setIsFocused((current) => !current);\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    }\n  }\n  \n  // Invokes decrementTime and switchModes functions every 1000ms (1 sec) when the timer is running\n  useInterval(\n    () => {\n      decrementTime();\n      switchModes();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  // sets timer on or off when play/pause button is pressed and starts session (displays countdown)\n  function playPause() {\n    setSession(true);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  // stops the session and timer and resets playTime to last selected focusTime\n  function stopSession() {\n    setSession(false);\n    setIsTimerRunning(false);\n    setPlayTime(focusTime * 60);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* Displays the selected focus time */}\n              Focus Duration: {minutesToDuration(focusTime)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={reduceFocus}\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={addFocus}\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={reduceBreak}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={addBreak}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              disabled={!session}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div style={{ display: session ? 'block' : 'none'}}>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">{isFocused ? \"Focusing\" : \"On Break\"} for {minutesToDuration(isFocused ? focusTime : breakTime)}</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(playTime)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax={isFocused ? focusTime : breakTime}\n                aria-valuenow={playTime} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: playTime }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}