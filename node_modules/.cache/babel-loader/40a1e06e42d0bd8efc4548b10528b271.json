{"ast":null,"code":"var _jsxFileName = \"/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusOrBreak.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\n\nfunction FocusOrBreak(props) {\n  const {\n    isFocused,\n    focusTime,\n    breakTime,\n    playTime\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, isFocused ? \"Focusing\" : \"On Break\", \" for \", minutesToDuration(isFocused ? focusTime : breakTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, secondsToDuration(playTime), \" remaining\")));\n}\n\nexport default FocusOrBreak;","map":{"version":3,"sources":["/Users/Melecio/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusOrBreak.js"],"names":["React","minutesToDuration","secondsToDuration","FocusOrBreak","props","isFocused","focusTime","breakTime","playTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA;AAAlC,MAA8CJ,KAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCC,SAAS,GAAG,UAAH,GAAgB,UAA1D,WAA2EJ,iBAAiB,CAACI,SAAS,GAAGC,SAAH,GAAeC,SAAzB,CAA5F,aAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,CAACM,QAAD,CADpB,eAJF,CADF,CADF;AAYD;;AAED,eAAeL,YAAf","sourcesContent":["import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from '../utils/duration';\n\nfunction FocusOrBreak(props) {\n  const {isFocused, focusTime, breakTime, playTime} = props;\n\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        {/* Displays current session (Focuing or On Break) and selected  */}\n        <h2 data-testid=\"session-title\">{isFocused ? \"Focusing\" : \"On Break\"} for {minutesToDuration(isFocused ? focusTime : breakTime)} minutes</h2>\n        {/* TODO: Update message below to include time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          {secondsToDuration(playTime)} remaining\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default FocusOrBreak;"]},"metadata":{},"sourceType":"module"}